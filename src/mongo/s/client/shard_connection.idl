# Copyright (C) 2019-present MongoDB, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the Server Side Public License, version 1,
# as published by MongoDB, Inc.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Server Side Public License for more details.
#
# You should have received a copy of the Server Side Public License
# along with this program. If not, see
# <http://www.mongodb.com/licensing/server-side-public-license>.
#
# As a special exception, the copyright holders give permission to link the
# code of portions of this program with the OpenSSL library under certain
# conditions as described in each individual source file and distribute
# linked combinations including the program with the OpenSSL library. You
# must comply with the Server Side Public License in all respects for
# all of the code used other than as permitted herein. If you modify file(s)
# with this exception, you may extend this exception to your version of the
# file(s), but you are not obligated to do so. If you do not wish to do so,
# delete this exception statement from your version. If you delete this
# exception statement from all source files in the program, then also delete
# it in the license file.
#

global:
    cpp_namespace: "mongo"

server_parameters:
    connPoolMaxShardedConnsPerHost:
        description: 'Maximum connections per host the sharded conn pool should store'
        set_at: startup
        cpp_vartype: int
        cpp_varname: gMaxShardedConnsPerHost
        default: 200
    connPoolMaxShardedInUseConnsPerHost:
        description: 'Maximum in-use connections per host in the sharded connection pool'
        set_at: startup
        cpp_vartype: int
        cpp_varname: gMaxShardedInUseConnsPerHost
        default: { expr: 'std::numeric_limits<int>::max()' }
    shardedConnPoolIdleTimeoutMinutes:
        description: 'Amount of time, in minutes, to keep idle connections in the sharded connection pool'
        set_at: startup
        cpp_vartype: int
        cpp_varname: gShardedConnPoolIdleTimeout
        default: { expr: 'std::numeric_limits<int>::max()' }
